package github7;

public class RadixSort {
	
	public static void main(String[] args) {
		int[] arr = {53, 3, 542, 748, 14, 214 };
	}
	
	//基数排序方法
	public static void radSort(int[] arr){
		
		//定义一个二维数组,表示10个桶,每个桶即为一个一维数组
		//说明:
		//1.二维数组包含10个一维数组
		//2.为了防止在放入数的时候,数据溢出,则每个一维数组(桶),大小定为arr.length
		//3.需要明确:基数排序是使用空间换时间的经典算法
		int[][] bucket = new int[10][arr.length];
		
		//为了记录每个桶中,实际存放了多少个数据,需要定义一个一维数组来记录各个桶的每次放入的数据个数
		//可以这里理解
		//比如：bucketNums[0] , 记录的就是  bucket[0] 桶的放入数据个数
		int[] bucketNums = new int[10];
		
		//第1轮排序(对每个元素的个位进行排序)
		for(int j = 0;j < arr.length;j++){
			//取出每个元素的个位的值
			int digt = arr[j] % 10;
			//放入到对应的桶中
			bucket[digt][bucketNums[digt]] = arr[j];
			bucketNums[digt]++;
			
		}
	}

}
