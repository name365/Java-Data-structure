package github2;

public class DoubleLinkedListTest {

	public static void main(String[] args) {

	}

}

//创建一个双向链表的类
class DoubleLinkedList {
	//先初始化一个头节点, 头节点不要动, 不存放具体的数据
	private HeroNode2 head = new HeroNode2(0, "", "");

	//返回头节点
	public HeroNode2 getHead() {
		return head;
	}

	//遍历双向链表的方法
	//显示链表[遍历]
	public void list() {
	//判断链表是否为空
	if (head.next == null) {
		System.out.println("链表为空");
		return;
	}
	//由于头节点head不能动,所以需要一个辅助变量 temp,找到添加的位置
	HeroNode2 temp = head.next;
	while (true) {
		if (temp == null) {	//判断是否到链表最后
			break;
		}
		//输出节点的信息
		System.out.println(temp);
		temp = temp.next;	//将temp后移
	}
	}

	//添加一个节点到双向链表的最后.
	public void add(HeroNode2 heroNode) {
		//由于头节点head不能动,所以需要一个辅助变量 temp,找到添加的位置
		HeroNode2 temp = head;
		//遍历链表，找到最后
		while (true) {
			if (temp.next == null) {	//找到链表的最后
				break;
			}
			//如果没有找到最后, 将temp后移
			temp = temp.next;
		}
		//当退出while循环时，temp就指向了链表的最后
		//形成一个双向链表
		temp.next = heroNode;
		heroNode.pre = temp;
	}
	
	//修改节点的信息,根据id编号来修改,即id编号不改
	//说明
	//1.根据newHeroNode 的 id 来修改即可
	public void update(HeroNode newHeroNode){
		//判断是否为空
		if(head.next == null){	//链表为空
			System.out.println("链表为空！！！");
			return;
		}
		//找到需要修改的节点,根据 id 编号
		//定义一个临时变量
		HeroNode temp = head.next;
		boolean flag = false;	//表示是否找到该节点
		while(true){
			if(temp == null){
				break;	//已经遍历完链表
			}
			if(temp.id == newHeroNode.id){
				//找到了
				flag = true;
				break;
			}
			temp = temp.next;
		}
		//根据flag 判断是否找到要修改的节点
		if(flag){
			temp.name = newHeroNode.name;
			temp.nickName = newHeroNode.nickName;
		}else{
			System.out.printf("没有找到编号为 %d 的节点.\n",newHeroNode.id);
		}
	}

}

//定义HeroNode2 ， 每个HeroNode 对象就是一个节点
class HeroNode2 {
	public int id;
	public String name;
	public String nickname;
	public HeroNode2 next; //指向下一个节点, 默认为null
	public HeroNode2 pre; //指向前一个节点, 默认为null
	
	//构造器
	public HeroNode2(int id, String name, String nickname) {
		super();
		this.id = id;
		this.name = name;
		this.nickname = nickname;
	}

	//为了显示方便，重写toString方法
	@Override
	public String toString() {
		return "HeroNode2 [id=" + id + ", name=" + name + ", nickname=" + nickname + "]";
	}
	
}